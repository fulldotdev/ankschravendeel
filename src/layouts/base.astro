---
import type { LayoutSchema } from "@/schemas/layout"
import { Font } from "astro:assets"
import { getCollection, getEntry } from "astro:content"

import "@/styles/globals.css"

import { SEO } from "astro-seo"

import { getHref } from "@/lib/get-href"
import Block from "@/components/block.astro"

type Props = LayoutSchema

const { lang, title, description, image, company, head, body, css } =
  Astro.props

// Get the base layout, including the banner, header, footer etc.
const layout = await getEntry("layouts", "base")

// Get the policies from the policies collection and map them to the href and text
const policies = (await getCollection("policies")).map((policy) => {
  return {
    text: policy.data.title,
    href: getHref(policy),
  }
})
---

<!doctype html>
<html
  class="layout text-foreground bg-background h-full w-full font-sans text-base scheme-light dark:scheme-dark"
  lang={lang}
>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <SEO
      charset="UTF-8"
      title={title || undefined}
      description={description || undefined}
      openGraph={{
        basic: {
          title: title || "",
          image: Astro.url.origin + image?.src,
          type: "website",
          url: Astro.url.href,
        },
        image: {
          url: Astro.url.origin + image?.src,
          alt: image?.alt || title || company || undefined,
        },
        optional: {
          description: description || undefined,
          siteName: company || undefined,
        },
      }}
    />
    <Font cssVariable="--font-sans" preload />
    <Fragment set:html={head} />
  </head>
  <body>
    <Block {...layout?.data.banner} />
    <Block {...layout?.data.header} />
    <main>
      <slot />
    </main>
    <Block {...layout?.data.footer} policies={policies} />
    <style set:html={css}></style>
    <Fragment set:html={body} />
  </body>
</html>
